name: LHDScraper

on:
  # Runs on the same schedule as the main workflow (every 40 minutes)
  schedule:
    - cron: '*/40 * * * *'
  workflow_dispatch:

jobs:
  run-uk-channels-script: # üëà JOB NAME CHANGED
    runs-on: ubuntu-latest
    container:
      # Using the recommended Playwright container image
      image: mcr.microsoft.com/playwright:v1.55.0-noble
    env:
      HOME: /root
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y python3-venv
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          # Ensure playwright is installed, but no need to call 'playwright install'
          pip install playwright==1.55.0 aiohttp httpx requests
        shell: bash

      - name: Download UK Channels Script (UK-ChannelsFinal.py) üì•
        run: |
          # üü¢ MODIFIED: Use the raw Dropbox link for direct download
          DROPBOX_RAW_URL="https://www.dropbox.com/scl/fi/rwd1rtux2wm584l1qwweu/UK-ChannelsFinal.py?rlkey=34625h4mwf20px2j53j2r1aso&raw=1"
          
          # Use curl -L to follow redirects and download to UK-ChannelsFinal.py
          curl -L -o UK-ChannelsFinal.py "$DROPBOX_RAW_URL"
          
          # Check if the file was downloaded successfully
          if [ ! -f "UK-ChannelsFinal.py" ]; then
              echo "‚ùå Error: Script download failed."
              exit 1
          fi
          echo "‚úÖ UK-ChannelsFinal.py downloaded successfully."
        shell: bash

      - name: Run UK-ChannelsFinal.py and Measure Time ‚è±Ô∏è
        run: |
          source venv/bin/activate
          
          echo "::group::‚ñ∂Ô∏è Running UK-ChannelsFinal.py..."
          START_TIME=$(date +%s)
          
          # üü¢ MODIFIED: Run the downloaded script
          python UK-ChannelsFinal.py
          
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          echo "::endgroup::"

          echo "::notice title=Script Time Complete::**‚úÖ UK-ChannelsFinal.py FINISHED!** Time Taken: **${DURATION} seconds**"
          
          # üü¢ MODIFIED: Check for the expected output file LHD.m3u
          if [ ! -f "LHD.m3u" ]; then
              echo "‚ö†Ô∏è Could not find expected output playlist file (LHD.m3u). The script may have failed to generate it."
              exit 1
          fi
        shell: bash

      - name: Upload LHD.m3u to Dropbox ‚¨ÜÔ∏è
        # The script outputs LHD.m3u, and we upload it to /MyStuff/LHD.m3u
        uses: gomes042/gh-actions-dropbox/files/upload@23ce81287e83f01c19c9f60b1849b746db6616b5
        with:
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          # üü¢ MODIFIED: Use the actual output filename LHD.m3u
          source_path: LHD.m3u
          # üü¢ MODIFIED: Target the correct path and filename
          DEST_PATH: /MyStuff/LHD.m3u
