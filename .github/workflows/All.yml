name: Update Combined Playlist

on:
  workflow_dispatch:
  schedule:
    # Runs every 10 minutes
    - cron: '*/10 * * * *'

jobs:
  update-playlist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Create and Run Playlist Script
        run: |
          cat << 'EOF' > combined_p_script.py
          import requests
          
          playlist_urls = [
            "https://www.dropbox.com/scl/fi/nu1fnl7fn2f2ltme1q9ic/WAC.m3u8?rlkey=4y95vkr12bc2ae42mf2n7naek&st=5uckw79j&dl=1",
            "https://www.dropbox.com/scl/fi/lcfb6miqcdsnmot02dw4e/Tim.m3u8?rlkey=lcbb6o7pnzfkuuh6p80qrymo4&st=aoscsvp9&dl=1",
            "https://www.dropbox.com/scl/fi/v2bh4oscn0ilfxgxh7mt8/PPV_playlist.m3u?rlkey=w41s9xas9xsk7468gb3ydf9pp&st=7n4lan2g&dl=1",
            "https://www.dropbox.com/scl/fi/d2w6aeaush914vrwck5n3/LiveMatches.m3u8?rlkey=41d7ygsieykokn9xvvt4wtqu0&st=z4enss1k&dl=1",
            "https://www.dropbox.com/scl/fi/hw2qi1jqu3afzyhc6wb5f/FSTVChannels.m3u?rlkey=36nvv2u4ynuh6d9nrbj64zucv&st=1r9sbzdi&dl=1",
            "https://www.dropbox.com/scl/fi/58rie6njaoyw8t8a2cvep/FST.m3u8?rlkey=iata10a9jdsg73fog8z491kpu&st=gjevuem9&dl=1",
            "https://world-proxifier.xyz/tims/playlist.m3u8",
            "https://world-proxifier.xyz/fstv/playlist.m3u8",
            "https://world-proxifier.xyz/sp/playlist.m3u8",
            "https://iptv-scraper-re.vercel.app/roxiestreams",
            "https://iptv-scraper-re.vercel.app/streambtw",
            "https://iptv-scraper-re.vercel.app/pixelsport"
          ]
          
          output_file = "Combined.m3u"
          
          with open(output_file, "w", encoding="utf-8") as outfile:
            outfile.write("#EXTM3U\n")
            
            for url in playlist_urls:
              print(f"Attempting to retrieve playlist from {url}")
              try:
                response = requests.get(url, timeout=10)
                response.raise_for_status() # This will raise an HTTPError for bad responses (4xx or 5xx)
                
                content = response.text.strip()
                if not content:
                  print(f"Playlist from {url} is empty, skipping.")
                  continue
                
                # Process content, removing #EXTM3U header if present
                lines = content.splitlines()
                if lines and lines[0].strip() == "#EXTM3U":
                  lines = lines[1:]
                
                for line in lines:
                  if line.strip(): # Only write non-empty lines
                    outfile.write(line + "\n")
                
                print(f"Successfully added content from {url}")
              except requests.exceptions.Timeout:
                print(f"Timeout retrieving playlist from {url}")
              except requests.exceptions.HTTPError as e:
                # Specifically catch HTTP errors (like 403 Forbidden)
                print(f"HTTP error for playlist {url}: {e}. Skipping this playlist.")
              except requests.exceptions.RequestException as e:
                # Catch other request-related errors
                print(f"An error occurred retrieving playlist from {url}: {e}. Skipping this playlist.")
          
          print(f"Finished creating combined playlist: {output_file}")
          
          EOF
          python combined_p_script.py

      - name: Upload file to Dropbox
        uses: gomes042/gh-actions-dropbox/files/upload@23ce81287e83f01c19c9f60b1849b746db6616b5
        with:
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          source_path: Combined.m3u
          DEST_PATH: /MyStuff/Combined.m3u
