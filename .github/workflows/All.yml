name: Update FSTV Channels

on:
  workflow_dispatch:
  schedule:
    # Runs every day at 00:00 UTC
    - cron: '*/10 * * * *'

jobs:
  update-playlist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Create and Run Playlist Combination Script
        run: |
          cat << EOF > combined_playlist_script.py
          import requests

         
          # Please replace these with your actual playlist URLs
          playlist_urls = [
              "https://www.dropbox.com/scl/fi/nu1fnl7fn2f2ltme1q9ic/WAC.m3u8?rlkey=4y95vkr12bc2ae42mf2n7naek&st=5uckw79j&dl=1",
              "https://www.dropbox.com/scl/fi/lcfbmiqcdsnmot02dw4e/Tim.m3u8?rlkey=lcbb6o7pnzfkuuh6p80qrymo4&st=aoscsvp9&dl=1",
              "https://www.dropbox.com/scl/fi/v2bh4oscn0ilfxgxh7mt8/PPV_playlist.m3u?rlkey=w41s9xas9xsk7468gb3ydf9pp&st=7n4lan2g&dl=1",
              "https://www.dropbox.com/scl/fi/d2w6aeaush914vrwck5n3/LiveMatches.m3u8?rlkey=41d7ygsieykokn9xvvt4wtqu0&st=z4enss1k&dl=1",
              "https://www.dropbox.com/scl/fi/hw2qi1jqu3afzyhc6wb5f/FSTVChannels.m3u?rlkey=36nvv2u4ynuh6d9nrbj64zucv&st=1r9sbzdi&dl=1",
              "https://www.dropbox.com/scl/fi/58rie6njaoyw8t8a2cvep/FST.m3u8?rlkey=iata10a9jdsg73fog8z491kpu&st=gjevuem9&dl=1"
          ]
          # ---------------------

          output_file = "Combined.m3u" # Renamed for clarity

          with open(output_file, "w") as outfile:
            # Write the M3U header
            outfile.write("#EXTM3U\n")

            for url in playlist_urls:
              try:
                response = requests.get(url, timeout=10) # Added timeout
                response.raise_for_status() # Raise an error for bad status codes

                content = response.text.strip()

                # Only process if content is not empty
                if content:
                  lines = content.splitlines()

                  # Skip the #EXTM3U header if it exists in the source playlist
                  if lines and lines[0].strip() == "#EXTM3U":
                    lines = lines[1:]

                  for line in lines:
                    if line.strip(): # Ensure the line isn't empty or just whitespace
                      outfile.write(line + "\n")
              except requests.exceptions.Timeout:
                print(f"Timeout retrieving playlist from {url}")
              except requests.exceptions.RequestException as e:
                print(f"Error retrieving playlist from {url}: {e}")

          print(f"Successfully created combined playlist: {output_file}")

          EOF
          python combined_playlist_script.py

      - name: Upload file to Dropbox
        uses: gomes042/gh-actions-dropbox/files/upload@23ce81287e83f01c19c9f60b1849b746db6616b5
        with:
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          source_path: Combined.m3u # Updated filename
          DEST_PATH: /MyStuff/Combined.m3u # Updated filename
